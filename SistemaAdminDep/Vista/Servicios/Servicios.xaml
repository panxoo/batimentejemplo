<UserControl x:Class="SistemaAdminDep.Vista.Servicios.Servicios"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Dic="clr-namespace:SistemaAdminDep.Diccionario"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:prism="http://prismlibrary.com/"  
             xmlns:ss="clr-namespace:Prism.Commands;assembly=Prism"
               xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"             
             xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:local="clr-namespace:SistemaAdminDep.Vista.Servicios"
             mc:Ignorable="d" 
                  Background="{DynamicResource MaterialDesignPaper}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             FontFamily="{StaticResource MaterialDesignFont}"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="/SistemaAdminDep;component/Diccionario/DicTexture.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <materialDesignConverters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConv"  FalseValue="Hidden" TrueValue="Visible" />
            <materialDesignConverters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"  FalseValue="Collapsed" TrueValue="Visible" />
            <Dic:ConvertTrueToFalse x:Key="ConvertFT"/>
            <Dic:ConvertColorActive x:Key="colr"/>
            <Dic:ConvertSoloNumero x:Key="SolNum"/>
            <Dic:ConvertParameter x:Key="ConvParm"/>
            <Dic:ConvertIcoDel x:Key="IcoDel0" Opcion="0" />
            <Dic:ConvertIcoDel x:Key="IcoDel1" Opcion="1" />


            <Style BasedOn="{StaticResource MaterialDesignCheckBox}" TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="0,0,10,10"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid  Background="{StaticResource test}">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <DockPanel Margin="20">

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                    <Image Source="/SistemaAdminDep;component/Imagen/Menu/bbq.png" Height="32" Margin="0,0,15,0"/>
                    <TextBlock Text="Mantenedor Servicios" Style="{StaticResource MaterialDesignDisplay1TextBlock}"/>
                </StackPanel>

                <StackPanel Orientation="Vertical" >


                    <Button   Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"   ToolTip="Agregar"  materialDesign:ShadowAssist.ShadowDepth="Depth3"
                       Command="{Binding DelAgregar}" HorizontalAlignment="Right" Margin="0,0,0,5" Grid.Row="0" IsEnabled="{Binding Camp.ModAdd,Converter={StaticResource ConvertFT}}">
                        <materialDesign:PackIcon Kind="Plus" Height="24" Width="24" />
                    </Button>

                    <DataGrid Visibility="Collapsed" ItemsSource="{Binding Camp.DtServ}" ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" 
                                  AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Visible" 
                                  MaxHeight="{Binding Camp.AltGrid}" IsEnabled="{Binding Camp.ModAdd, Converter={StaticResource ConvertFT}}" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">

                                            <Button AutomationProperties.AutomationId="DelUpdSrv"
                                                             Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                                                Command="{Binding Path=DataContext.DelUpdate,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                CommandParameter="{Binding Path=Id}" IsEnabled="{Binding Path=vigente}"
                                                        Content="{materialDesign:PackIcon Kind=Pencil, Size=15}" Height="25" Width="25"/>

                                            <Button AutomationProperties.AutomationId="DelRmvSrv" Margin="5,0,0,0"
                                                         Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                Command="{Binding Path=DataContext.DelDeleteMsg,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                        Height="25" Width="25">
                                                <Button.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource ConvParm}" Mode="OneWay">
                                                        <Binding Path="Id"/>
                                                        <Binding Path="vigente"/>
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                                <materialDesign:PackIcon  Kind="{Binding Path=vigente, Converter={StaticResource IcoDel0}}"
                                                                             Height="15" Width="15"/>
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Activo">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Path=vigente , Converter={StaticResource colr}}" Height="16" Width="16"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Nombre Serv" Binding="{Binding Path=nom}"/>
                            <DataGridTextColumn Header="Edificio" Binding="{Binding Path=edef}"/>
                            <DataGridTextColumn Header="Tipo Serv" Binding="{Binding Path=tpsrv}"/>
                            <DataGridCheckBoxColumn Header="Costo Fijo" Binding="{Binding Path=costfj}"/>
                            <DataGridTextColumn Header="Valor Cost Fijo" Binding="{Binding Path=costfjval}"/>
                            <DataGridTextColumn Header="Periodo Cost Fijo" Binding="{Binding Path=periodo}"/>
                            <DataGridCheckBoxColumn Header="Costo Uso" Binding="{Binding Path=costuso}"/>
                            <DataGridTextColumn Header="Costo uso Valor" Binding="{Binding Path=costusval}"/>

                        </DataGrid.Columns>
                    </DataGrid>

                    <materialDesign:Transitioner Name="Transitioner" SelectedIndex="0" >
                        <TextBlock/>
                        <materialDesign:TransitionerSlide   >
                            <materialDesign:TransitionerSlide.OpeningEffects>
                                <materialDesign:TransitionEffect Kind="SlideInFromLeft" Duration="0:0:0.8" />
                                <!--<materialDesign:TransitionEffect Kind="SlideInFromBottom" Duration="0:0:0.8" OffsetTime="0:0:0.15" />-->
                            </materialDesign:TransitionerSlide.OpeningEffects>

                            <GroupBox Header="Registrar tipo de servicio" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="0,5,0,0"
>
                                <!--Visibility="{Binding Camp.ModAdd, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">-->

                                <GroupBox.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" 
                                                       Text="{Binding}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </GroupBox.HeaderTemplate>
                                <StackPanel Orientation="Vertical" Margin="10">

                                    <TextBlock Text="Registro de servicio"  Margin="0,0,0,20" Style="{StaticResource MaterialDesignTitleTextBlock}"/>


                                    <StackPanel Orientation="Horizontal" 
                                                Visibility="{Binding Vargnrl.MultEdf , Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                                        <CheckBox Content="Servicio de condominio" IsChecked="{Binding Camp.CondUs}" VerticalAlignment="Bottom"/>
                                        <ComboBox ItemsSource="{Binding Vargnrl.edific}" DisplayMemberPath="Name" materialDesign:HintAssist.Hint="Seleccionar Edificio"  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                      SelectedValuePath="Id" SelectedValue="{Binding Camp.Idedf}"  Visibility="{Binding Camp.CondUs,Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                                  VerticalAlignment="Stretch"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock Text="Nombre de Servicio: "  VerticalAlignment="Bottom"/>
                                        <TextBox Text="{Binding Camp.Nomsrv,UpdateSourceTrigger=PropertyChanged}"  Width="250" Margin="0,0,20,0"/>

                                        <ComboBox ItemsSource="{Binding Vargnrl.Tpserv}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Camp.IdTpsrv}"
                                                  materialDesign:HintAssist.Hint="Tipo de servicio"  Style="{StaticResource MaterialDesignFloatingHintComboBox}" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <i:InvokeCommandAction Command="{Binding DelSelctTpSrv}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ComboBox>


                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                            <CheckBox Content="Costo por fijo" IsChecked="{Binding Camp.Costfj}"/>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBox Text="{Binding Camp.CostFjval,UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Ingresar Valor"
                                               Visibility="{Binding Camp.Costfj, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                                                <StackPanel Orientation="Vertical">
                                                    <RadioButton Content="Costo Diario" IsChecked="{Binding Camp.CostFjd}"
                                             Visibility="{Binding Camp.Costfj,Converter={StaticResource InvertedBooleanToVisibilityConverter}}" GroupName="DiaCostFj"
                                             />
                                                    <RadioButton Content="Costo Mensual" IsChecked="{Binding Camp.CostFjm}"
                                             Visibility="{Binding Camp.Costfj,Converter={StaticResource InvertedBooleanToVisibilityConverter}}" GroupName="DiaCostFj"/>
                                                </StackPanel>
                                            </StackPanel>

                                        </StackPanel>
                                        <StackPanel Orientation="Vertical">

                                            <CheckBox Content="Costo por uso" IsChecked="{Binding Camp.CostUso}" 
                                                  Visibility="{Binding Camp.CostAct,Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>

                                            <TextBox Text="{Binding Camp.CostUsval}" materialDesign:HintAssist.Hint="Ingresar Valor"
                                                 Visibility="{Binding Camp.CostUso,Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                                        </StackPanel>

                                    </StackPanel>

                                    <ListView ItemsSource="{Binding Camp.DtTpSrv}">
                                        <ListView.View>
                                            <GridView>

                                                <GridViewColumn Header="Req. Cobro" >
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <materialDesign:PackIcon  Kind="{Binding Path=rcob, Converter={StaticResource IcoDel1}}"
                                                                             Height="15" Width="15" HorizontalAlignment="Center"/>

                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn DisplayMemberBinding="{Binding Path=rcobval}" Header="Valor Cobro" />
                                                <GridViewColumn DisplayMemberBinding="{Binding Path=valgr}" Header="Valor Garantia" />
                                            </GridView>
                                        </ListView.View>
                                    </ListView>


                                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                        <Button Content="Guardar" Command="{Binding DelSavTpSrv}" CommandParameter="0"/>
                                        <Button Content="Guardar y Cerrar" Command="{Binding DelSavTpSrv}" CommandParameter="1" Margin="5,0,0,0"
                                                Visibility="{Binding Camp.ActUpdt, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
                                        <Button Content="Cancelar" Command="{Binding DelCanTpSrv}" Margin="5,0,0,0"/>


                                    </StackPanel>

                                </StackPanel>
                            </GroupBox>
                        </materialDesign:TransitionerSlide>
                    </materialDesign:Transitioner>
                </StackPanel>
            </DockPanel>
        </ScrollViewer>

    </Grid>
</UserControl>
